# -----------------------------------------------------------------------------
# vim: set ft=bash
# ---------------------------=
#
# Heavy SDKs/completions are lazy-loaded. Prompt is fast by default.
# Source profile and aliases
#---------------------------=

# Shell & Environment
export SHELL=/usr/bin/bash

[ -f "$HOME/.environment" ] && source "$HOME/.environment"
[ -f "$HOME/.aliases" ] && source "$HOME/.aliases"
[ -f "$HOME/.completions" ] && source "$HOME/.completions"

export BASH_COMPLETION_USER_FILE="$XDG_CONFIG_HOME/bash_completion"
export BASH_COMP_DIR=$HOME/.bash_completion.d
# -----------------------------------------------------------------------------
# Bash options
# -----------------------------------------------------------------------------
shopt -s autocd \
    cdspell \
    direxpand \
    dirspell \
    globstar \
    histappend \
    histverify
shopt -s nocaseglob no_empty_cmd_completion expand_aliases progcomp_alias

# History (XDG)
mkdir -p "$XDG_STATE_HOME/bash"
HISTFILE="$XDG_STATE_HOME/bash/history"
HISTCONTROL=ignoreboth:erasedups
HISTFILESIZE=99999
HISTSIZE=99999
# We will augment PROMPT_COMMAND below to run a tiny post-init once
PROMPT_COMMAND="history -a; history -n"

# parse_git_branch() { git branch --show-current 2>/dev/null; }
# git_dirty() { [[ -n $(git status --porcelain 2>/dev/null) ]] && echo "*"; }
# export PS1='\[\e[31m\]@\[\e[0m\]\[\e[33m\]\h\[\e[36m\] \w $(parse_git_branch)$(git_dirty) \[\e[32m\]$\[\e[0m\] '
export PS1='\[\e[31m\]@\[\e[0m\]\[\e[33m\]\h\[\e[36m\] \w \[\e[32m\]$\[\e[0m\] '

# -----------------------------------------------------------------------------
# Zoxide is relatively light; keep it immediate if available
if command -v zoxide >/dev/null 2>&1; then
    eval "$(zoxide init bash)"
fi

# -----------------------------------------------------------------------------
# Lazy-loaders (load only when used)
# -----------------------------------------------------------------------------

# Google Cloud SDK (large scripts)
__GCLOUD_INIT_DONE=
_gcloud_init() {
    [[ -n "$__GCLOUD_INIT_DONE" ]] && return 0
    source "$HOME/google-cloud-sdk/path.bash.inc" 2>/dev/null || :
    source "$HOME/google-cloud-sdk/completion.bash.inc" 2>/dev/null || :
    __GCLOUD_INIT_DONE=1
}
gcloud() { _gcloud_init; command gcloud "$@"; }

alias mcli='unalias mcli 2>/dev/null && complete -C /usr/bin/mcli mcli && mcli'

# The next line enables shell command completion for gcloud.
. "$HOME/google-cloud-sdk/completion.bash.inc" 2>/dev/null || :

esp-idf() {
    [[ ! -f '/opt/esp-idf/export.sh' ]] && /opt/esp-idf/install.sh
    /opt/esp-idf/export.sh
    }


# NVM / Node (notoriously heavy)
__NVM_INIT_DONE=
_load_nvm() {
    NVM_DIR='.config/nvm'
    [[ -n "$__NVM_INIT_DONE" ]] && return 0
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
    __NVM_INIT_DONE=1
}
alias nvm='echo "loading..." && _load_nvm && unalias nvm && command nvm'
alias node='loading..." && _load_nvm && unalias node && command node'
alias npm='loading..." && _load_nvm &&  unalias npm && command npm'
alias npx='loading..." && _load_nvm &&  unalias npx && command npx'
# Kiro terminal integration
# [[ "$TERM_PROGRAM" == "kiro" ]] && . "$(kiro --locate-shell-integration-path bash)" 2>/dev/null || :

# pnpm
export PNPM_HOME="/home/matias/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
#
\. <(fzf --bash)

bind -m vi-insert '"\ez": "`__zoxide_zi`\C-M"'
