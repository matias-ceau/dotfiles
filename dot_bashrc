#---------------------------
#
# Source profile and aliases
#
#---------------------------
#---------------------------
if [ -f ~/.environment ]; then
    . ~/.environment
fi
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi
#---------------------------
export BASH_COMPLETION_USER_FILE="$XDG_CONFIG_HOME/bash-completion/bash_completion"

shopt -s expand_aliases
shopt -s autocd

# HISTORY XDG
mkdir -p "$XDG_STATE_HOME"/bash
export HISTFILE="$XDG_STATE_HOME"/bash/history

# VIM
set -o vi
bind '"\C-e": "\ev"'

#PS1="\[\e]0;\w\a\]\n\[\e[32m\]\u@\h: \[\e[33m\]\w\[\e[0m\]\n$ "
PS1='\[\e[31m\]@\[\e[0m\]\[\e[33m\]\h\[\e[36m\] \w \[\e[32m\]$\[\e[0m\] '

# FUNCTIONS
f() { $1 "$(fzf)"; }
vs() {
    script=$HOME/.scripts/$1
    echo '#! /usr/bin/env TODO\n\n#DOC# "TODO"\n\n' >$script
    chmod +x $script
    vim $script
}
m() {
    link=$(xsel -b)
    mpv -fs "$link"
}
nm() { mv "$1" ~/data/new_music/; }
epoch_hexadecimal() {
    D=$(date --date="$1" +"%s")
    SD=$(($D * 1000))
    printf "%X" "$SD"
}

lx() {
    pdflatex --interaction=batchmode $1 2>&1 >/dev/null
}

#VENV
##     on() { source $HOME/.virtualenv/"$1"/bin/activate ; }
##     new() { python -m venv $HOME/.virtualenv/"$1" ; }
##     del() { rm -rf $HOME/.virtualenv/"$1" ; }

#transform_symlink() {
#    local symlink_path="$1"
#
#    if [[ ! -L "$symlink_path" ]]; then
#        echo "Error: '$symlink_path' is not a symlink."
#        return 1
#    fi
#
#    local target_path
#    target_path=$(readlink "$symlink_path")
#
#    if [[ ! -e "$target_path" ]]; then
#        echo "Error: Target '$target_path' does not exist."
#        return 1
#    fi
#
#    rm "$symlink_path"
#    if cp -r "$target_path" "$symlink_path"; then
#        echo "Symlink '$symlink_path' has been transformed into a copy of its target ('$target_path')."
#    else
#        echo "Error: Failed to copy target '$target_path' to '$symlink_path'."
#        return 1
#    fi
#}

eval "$(register-python-argcomplete pipx)"
eval "$(zoxide init bash)"
